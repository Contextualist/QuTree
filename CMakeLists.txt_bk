###########################################################################
#
# --- QuantumDynamics library (QDlib) ---
#
# Description:
# QDlib is a linear algebra library suited for quantum dynamics simulations.
# The main intended use of the library are tensor tree applications.
#
# Main Author: Roman Ellerbrock
# Contributing authors: Thomas Weike, Tim Lenzen
###########################################################################

cmake_minimum_required(VERSION 2.8)

# MCTDH Project
project(QDlib C CXX Fortran)
set(QDlib_VERSION_MAJOR 0)
set(QDlib_VERSION_MINOR 1)
enable_language(Fortran)
enable_language(C)
enable_language(CXX)

# Required packages
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})
find_package(Eigen3)
if (NOT EIGEN3_FOUND)
  set( EIGEN3_INCLUDE_DIR $ENV{EIGEN3_INCLUDE_DIR})
  if (NOT EIGEN3_INCLUDE_DIR)
    message( FATAL_ERROR "No Eigen3 found, either point CMAKE_PREFIX_PATH or EIGEN3_INCLUDE_DIR to your Eigen installation." )
  else ()
    message ( STATUS "Using EIGEN3_INCLUDE_DIR environment variable for Eigen 3 location instead" )
  endif ()
endif ()
include_directories("${EIGEN3_INCLUDE_DIR}")

#####################################################################
# Set Compiler Flags
#####################################################################
# Ensure C++ 11 standard
if (CMAKE_VERSION VERSION_LESS "3.1")
    if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        set(CMAKE_CXX_FLAGS "--std=gnu++11 ${CMAKE_CXX_FLAGS}")
    endif ()
else ()
    set(CMAKE_CXX_STANDARD 11)
endif ()

# Optimization
if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif ()

# C++ Flags
#set(CMAKE_CXX_FLAGS_RELEASE "-O3 -fopenmp -ftree-parallelize-loops=20 -pg")
#set(CMAKE_CXX_FLAGS_RELEASE "-fopenmp -O3 -mcmodel=large")
#set(CMAKE_CXX_FLAGS_RELEASE "-fopenmp -ftree-parallelize-loops=20 -O3")
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -ffast-math ")
#set(FLAGS_VECTORIZEE "-ftree-vectorize -mavx -mavx2 -msse2 -mfma -mbmi")
set(FLAGS_VECTORIZEE "-fopenmp-simd -march=native -Rpass='loop|vect' -Rpass-missed='loop|vect' -Rpass-analysis='loop|vect' ")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE} ${FLAGS_VECTORIZE}")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE} -mcmodel=large")

if (APPLE)
    message("On OSX")
    set(CMAKE_CXX_FLAGS_RELEASE "-mmacosx-version-min=10.14 ${CMAKE_CXX_FLAGS_RELEASE}")
elseif (UNIX)
    message("On UNIX")
    set(CMAKE_CXX_FLAGS_RELEASE "-ftree-parallelize-loops=8  ${CMAKE_CXX_FLAGS_RELEASE}")
else ()
    message("Other OS")
    set(CMAKE_CXX_FLAGS_RELEASE " ${CMAKE_CXX_FLAGS_RELEASE}")
endif ()

# Fortran Flags
set(FFLAGS "-heap-arrays -mcmodel=large")

# All compilable files, including template instantiations
add_library(QDlib
	TensorDim.cpp
	TensorDim_Extension.cpp
	TemplateInstantiations_1.cpp
	TemplateInstantiations_2.cpp	
	FFT.cpp
	JacobiRotationFramework.cpp 
	SimultaneousDiagonalization.cpp
	stdafx.cpp
	CWrapper.f
	long_integer.cpp
)

install(TARGETS MathFunctions DESTINATION lib)
install(FILES MathFunctions.h DESTINATION include)

set_target_properties(QDlib PROPERTIES PUBLIC_HEADER "BS_integrator.h;DoubleParticleOperator.h;FFT.h;FFTCooleyTukey.h;JacobiRotationFramework.h;Lanzcos.h;Matrix.h;Matrix_Implementation.h;MultiIndex.h;QMConstants.h;SimultaneousDiagonalization.h;SingleParticleOperator.h;Tensor.h;TensorDim.h;TensorDim_Extension.h;Tensor_Extension.h;Tensor_Extension_Implementation.h;Tensor_Implementation.h;Tree.h;TreeNode.h;Vector.h;Vector_Implementation.h;long_integer.h;stdafx.h;QDlib.h"
)

install (TARGETS QDlib
	ARCHIVE DESTINATION lib
	LIBRARY DESTINATION lib
	RUNTIME DESTINATION bin
	PUBLIC_HEADER DESTINATION include)
