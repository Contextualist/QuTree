name: C/C++ CMake CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout push
      uses: actions/checkout@v2
    - name: run-cmake-debug
      uses: lukka/run-cmake@v1.4
      with:
        # Select the mode of the action. There are three different modes: CMakeListsTxtBasic: Run CMake using a CMakeLists.txt - Basic configuration, CMakeListsTxtAdvanced: Run CMake using a CMakeLists.txt - Advanced configuration, CMakeSettingsJson: Run CMake using a CMakeSettings.json of Visual Studio.
        cmakeListsOrSettingsJson: CMakeListsTxtBasic # default is CMakeListsTxtBasic
        # Select the build configuration, typically Debug or Release. Used by CMakeListsTxtBasic mode.
        cmakeBuildType: Debug # optional, default is Debug
        # Specify the CMake generator to use. Possible values: Ninja: Ninja, NinjaMulti: Ninja Multi-Config UnixMakefiles: Unix Makefiles, VS16Win64: Visual Studio 2019 x64, VS16Arm64: Visual Studio 2019 ARM64, VS16Arm: Visual Studio 2019 ARM, VS16Win32: Visual Studio 2019 Win32, VS15Arm64: Visual Studio 2017 x64, VS15Win64: Visual Studio 2017 ARM64, VS15Arm: Visual Studio 2017 ARM, VS15Win32: Visual Studio 2017 Win32. Used by CMakeListsTxtBasic mode.
        cmakeGenerator: UnixMakefiles # optional, default is Ninja
        # Indicates whether to run 'cmake --build' after CMake project files have been generated successfully. Used by any mode.
        buildWithCMake: True # optional, default is true
        # Additional parameters for both CMake and the make program (e.g. ninja or make).  Separate CMake arguments to the native make program arguments with '--', such as: '--clean-first --config Debug -- -j0'. Used by both CMakeListsTxtBasic and CMakeListsTxtAdvanced modes
        buildWithCMakeArgs: --target QuTree TestQuTree benchmarks TestExamples # optional, default is
    - name: run-cmake-release
      uses: lukka/run-cmake@v1.4
      with:
        # Select the mode of the action. There are three different modes: CMakeListsTxtBasic: Run CMake using a CMakeLists.txt - Basic configuration, CMakeListsTxtAdvanced: Run CMake using a CMakeLists.txt - Advanced configuration, CMakeSettingsJson: Run CMake using a CMakeSettings.json of Visual Studio.
        cmakeListsOrSettingsJson: CMakeListsTxtBasic # default is CMakeListsTxtBasic
        # Select the build configuration, typically Debug or Release. Used by CMakeListsTxtBasic mode.
        cmakeBuildType: Release # optional, default is Debug
        # Specify the CMake generator to use. Possible values: Ninja: Ninja, NinjaMulti: Ninja Multi-Config UnixMakefiles: Unix Makefiles, VS16Win64: Visual Studio 2019 x64, VS16Arm64: Visual Studio 2019 ARM64, VS16Arm: Visual Studio 2019 ARM, VS16Win32: Visual Studio 2019 Win32, VS15Arm64: Visual Studio 2017 x64, VS15Win64: Visual Studio 2017 ARM64, VS15Arm: Visual Studio 2017 ARM, VS15Win32: Visual Studio 2017 Win32. Used by CMakeListsTxtBasic mode.
        cmakeGenerator: UnixMakefiles # optional, default is Ninja
        # Indicates whether to run 'cmake --build' after CMake project files have been generated successfully. Used by any mode.
        buildWithCMake: True # optional, default is true
        # Additional parameters for both CMake and the make program (e.g. ninja or make).  Separate CMake arguments to the native make program arguments with '--', such as: '--clean-first --config Debug -- -j0'. Used by both CMakeListsTxtBasic and CMakeListsTxtAdvanced modes
        buildWithCMakeArgs: --target QuTree TestQuTree benchmarks TestExamples # optional, default is
